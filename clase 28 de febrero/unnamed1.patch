Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1551681265825)
+++ .idea/vcs.xml	(date 1551681265825)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/com/company/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Main.java	(date 1551679025834)
+++ src/com/company/Main.java	(date 1551679025834)
@@ -0,0 +1,45 @@
+package com.company;
+
+public class Main {
+
+    public static void main(String[] args) {
+
+        Vehicle[] myArray = new Vehicle[5];
+
+        myArray[0] = new Jeep("Fred's Jeep",4,120,4);
+        myArray[1] = new Jeep("Frank's Jeep", 2,140, 4);
+        myArray[2] = new Hovercraft("Sue's Hover-craft",6,80,8,4.1);
+        myArray[3] = new Frigate("Money Waster", 2,85,9.10);
+        myArray[4] = new PoliceCar("Dodge charger", 4, 152, 4);
+
+        for (int i=0; i<myArray.length; i++) {
+
+            System.out.println(myArray[i].getName());
+
+            if (myArray[i] instanceof LandVehicle) {
+                LandVehicle lv = (LandVehicle)myArray[i];
+                lv.drive();
+            }
+
+            if (myArray[i] instanceof Emergency) {
+                Emergency xv = (Emergency)myArray[i];
+                xv.soundSiren();
+            }
+        }
+
+        Vehicle[] myVehicles = new Vehicle[5];
+
+        myVehicles[0] = myArray[0];
+        myVehicles[1] = myArray[1];
+        myVehicles[2] = myArray[2];
+        myVehicles[3] = myArray[3];
+        myVehicles[4] = myArray[4];
+
+        System.out.println("My vehicle list: ");
+
+        for (int n=0; n<myVehicles.length; n++){
+            System.out.println(myArray[n].getName()
+            );
+        }
+    }
+}
\ No newline at end of file
Index: src/com/company/Vehicle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Vehicle.java	(date 1551678643761)
+++ src/com/company/Vehicle.java	(date 1551678643761)
@@ -0,0 +1,26 @@
+package com.company;
+
+public class Vehicle {
+    private String name;
+    private int maxPassengers;
+    private double maxSpeed;
+
+    public Vehicle(String name, int maxPassengers, double maxSpeed) {
+        this.name = name;
+        this.maxPassengers = maxPassengers;
+        this.maxSpeed = maxSpeed;
+    }
+
+    public String getName() { return name; }
+
+    public void setName(String name) { this.name = name; }
+
+    public int getMaxPassengers() { return maxPassengers; }
+
+    public void setMaxPassengers(int maxPassengers) { this.maxPassengers = maxPassengers; }
+
+    public double getMaxSpeed() { return maxSpeed; }
+
+    public void setMaxSpeed(double maxSpeed) { this.maxSpeed = maxSpeed; }
+
+}
\ No newline at end of file
Index: src/com/company/PoliceCar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/PoliceCar.java	(date 1551679209843)
+++ src/com/company/PoliceCar.java	(date 1551679209843)
@@ -0,0 +1,34 @@
+package com.company;
+
+public class PoliceCar extends Vehicle implements Emergency, LandVehicle{
+    private int numWheels;
+
+    public PoliceCar(String name, int maxPassengers, double maxSpeed, int numWheels) {
+        super(name, maxPassengers, maxSpeed);
+        this.numWheels = numWheels;
+    }
+
+    @Override
+    public int getNumWheels() {
+        return numWheels;
+    }
+
+    @Override
+    public void setNumWheels(int numWheels) {
+        this.numWheels = numWheels;
+    }
+
+    @Override
+    public void drive() {
+        System.out.println("Calling drive() method!");
+    }
+
+    @Override
+    public void soundSiren() {
+        System.out.println("Weeee wooo!");
+    }
+
+    public void armor(){
+        System.out.println("Armored unit");
+    }
+}
\ No newline at end of file
Index: src/com/company/LandVehicle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/LandVehicle.java	(date 1551678675787)
+++ src/com/company/LandVehicle.java	(date 1551678675787)
@@ -0,0 +1,7 @@
+package com.company;
+
+public interface LandVehicle {
+    int getNumWheels();
+    void setNumWheels(int numWheels);
+    void drive();
+}
\ No newline at end of file
Index: src/com/company/Jeep.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Jeep.java	(date 1551678809303)
+++ src/com/company/Jeep.java	(date 1551678809303)
@@ -0,0 +1,29 @@
+package com.company;
+
+public class Jeep extends Vehicle implements LandVehicle{
+    private int numWheels;
+
+    public Jeep(String name, int maxPassengers, double maxSpeed, int numWheels) {
+        super(name, maxPassengers, maxSpeed);
+        this.numWheels = numWheels;
+    }
+
+    @Override
+    public int getNumWheels() {
+        return numWheels;
+    }
+
+    @Override
+    public void setNumWheels(int numWheels) {
+        this.numWheels = numWheels;
+    }
+
+    @Override
+    public void drive() {
+        System.out.println("Calling drive() method!");
+    }
+
+    public void soundHorn(){
+        System.out.println("Meep, meep!");
+    }
+}
\ No newline at end of file
Index: src/com/company/SeaVessel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/SeaVessel.java	(date 1551678713463)
+++ src/com/company/SeaVessel.java	(date 1551678713463)
@@ -0,0 +1,7 @@
+package com.company;
+
+public interface SeaVessel {
+    double getDisplacement();
+    void setDisplacement(double displacement);
+    void launch();
+}
\ No newline at end of file
Index: src/com/company/Hovercraft.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Hovercraft.java	(date 1551678936963)
+++ src/com/company/Hovercraft.java	(date 1551678936963)
@@ -0,0 +1,50 @@
+package com.company;
+
+public class Hovercraft extends Vehicle implements LandVehicle, SeaVessel{
+    private int numWheels;
+    private double displacement;
+
+    public Hovercraft(String name, int maxPassengers, double maxSpeed, int numWheels, double displacement) {
+        super(name, maxPassengers, maxSpeed);
+        this.numWheels = numWheels;
+        this.displacement = displacement;
+    }
+
+    @Override
+    public int getNumWheels() {
+        return numWheels;
+    }
+
+    @Override
+    public void setNumWheels(int numWheels) {
+        this.numWheels = numWheels;
+    }
+
+    @Override
+    public void drive() {
+        System.out.println("Calling drive() method!");
+    }
+
+    @Override
+    public double getDisplacement() {
+        return displacement;
+    }
+
+    @Override
+    public void setDisplacement(double displacement) {
+        this.displacement = displacement;
+    }
+
+    @Override
+    public void launch() {
+        System.out.println("Ahoy!");
+    }
+
+    public void enterLand(){
+        System.out.println("");
+    }
+
+    public void enterSea(){
+        System.out.println("");
+    }
+}
\ No newline at end of file
Index: src/com/company/Frigate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Frigate.java	(date 1551678870928)
+++ src/com/company/Frigate.java	(date 1551678870928)
@@ -0,0 +1,29 @@
+package com.company;
+
+public class Frigate extends Vehicle implements SeaVessel{
+    private double displacement;
+
+    public Frigate(String name, int maxPassengers, double maxSpeed, double displacement) {
+        super(name, maxPassengers, maxSpeed);
+        this.displacement = displacement;
+    }
+
+    @Override
+    public double getDisplacement() {
+        return displacement;
+    }
+
+    @Override
+    public void setDisplacement(double displacement) {
+        this.displacement = displacement;
+    }
+
+    @Override
+    public void launch() {
+        System.out.println("Ahoy!");
+    }
+
+    public void fireGun(){
+        System.out.println("Fum, fum, fum!");
+    }
+}
\ No newline at end of file
Index: src/com/company/Emergency.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Emergency.java	(date 1551679324295)
+++ src/com/company/Emergency.java	(date 1551679324295)
@@ -0,0 +1,5 @@
+package com.company;
+
+public interface Emergency {
+    void soundSiren();
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1551381345056)
+++ .idea/misc.xml	(date 1551381345056)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectKey">
+    <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: clase 28 de febrero.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- clase 28 de febrero.iml	(date 1551381311980)
+++ clase 28 de febrero.iml	(date 1551381311980)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
+
Index: .idea/project-template.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/project-template.xml	(date 1551381311876)
+++ .idea/project-template.xml	(date 1551381311876)
@@ -0,0 +1,3 @@
+<template>
+  <input-field default="com.company">IJ_BASE_PACKAGE</input-field>
+</template>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1551381345267)
+++ .idea/modules.xml	(date 1551381345267)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/clase 28 de febrero.iml" filepath="$PROJECT_DIR$/clase 28 de febrero.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/description.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/description.html	(date 1551381311813)
+++ .idea/description.html	(date 1551381311813)
@@ -0,0 +1,1 @@
+<html>Simple <b>Java</b> application that includes a class with <code>main()</code> method</html>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(date 1551381345164)
+++ .idea/encodings.xml	(date 1551381345164)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" addBOMForNewFiles="with NO BOM">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
